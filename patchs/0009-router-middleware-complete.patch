From 517e2f05bf75c61d59702fc10f3425a75709cf65 Mon Sep 17 00:00:00 2001
From: nicholas <Nicholas-Stone@outlook.com>
Date: Fri, 20 Apr 2018 11:34:40 +0800
Subject: [PATCH 09/16] router middleware complete

---
 app/Http/Kernel.php                           |  2 +-
 resources/assets/js/app.js                    |  5 +++--
 resources/assets/js/components/navbar.vue     | 16 +++++++++-----
 resources/assets/js/config/index.js           |  4 ++++
 resources/assets/js/router/index.js           | 19 +++++++++++-----
 .../middlewares/RedirectIfAuthenticated.js    | 15 +++++++++++++
 .../middlewares/RedirectIfUnauthenticated.js  | 17 ++++++++++++++
 .../js/router/middlewares/UpdateProfile.js    |  7 ++++++
 .../assets/js/router/middlewares/index.js     | 22 +++++++++++++++++++
 resources/assets/js/store/getters.js          |  2 ++
 .../assets/js/store/modules/authorizations.js |  6 ++++-
 resources/assets/js/views/Home.vue            |  2 +-
 12 files changed, 101 insertions(+), 16 deletions(-)
 create mode 100644 resources/assets/js/config/index.js
 create mode 100644 resources/assets/js/router/middlewares/RedirectIfAuthenticated.js
 create mode 100644 resources/assets/js/router/middlewares/RedirectIfUnauthenticated.js
 create mode 100644 resources/assets/js/router/middlewares/UpdateProfile.js
 create mode 100644 resources/assets/js/router/middlewares/index.js

diff --git a/app/Http/Kernel.php b/app/Http/Kernel.php
index ea17f20..7506099 100644
--- a/app/Http/Kernel.php
+++ b/app/Http/Kernel.php
@@ -19,7 +19,7 @@ class Kernel extends HttpKernel
         \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
         \App\Http\Middleware\TrimStrings::class,
         \App\Http\Middleware\TrustProxies::class,
-       \App\Http\Middleware\ApiCORSAccess::class,
+        \App\Http\Middleware\ApiCORSAccess::class,
     ];
 
     /**
diff --git a/resources/assets/js/app.js b/resources/assets/js/app.js
index 0ecedfa..ee58574 100644
--- a/resources/assets/js/app.js
+++ b/resources/assets/js/app.js
@@ -4,7 +4,6 @@ import store from './store'
 // import from node_modules
 import Vue from 'vue'
 import Axios from 'axios'
-// import VueAxios from 'vue-axios'
 // import vue components
 import App from './Main'
 import alert from './components/alert'
@@ -12,8 +11,10 @@ import alert from './components/alert'
 import BootstrapVue from 'bootstrap-vue'
 import 'bootstrap/dist/css/bootstrap.css'
 import 'bootstrap-vue/dist/bootstrap-vue.css'
+// import config
+import config from './config'
 
-Axios.defaults.baseURL = 'http://api.qa.dev'
+Axios.defaults.baseURL = config.apiUrl
 Axios.defaults.headers.common['Accept'] = 'application/prs.qa.v1+json'
 
 Vue.use(BootstrapVue)
diff --git a/resources/assets/js/components/navbar.vue b/resources/assets/js/components/navbar.vue
index 633e2ae..93a2166 100644
--- a/resources/assets/js/components/navbar.vue
+++ b/resources/assets/js/components/navbar.vue
@@ -49,7 +49,8 @@
           right>
           <!-- Using button-content slot -->
           <template slot="button-content">
-            <em>{{ name }}</em>
+            <!--<em>{{ name }}</em>-->
+            <b-img :src="avatar"/>
           </template>
           <b-dropdown-item :to="{ name: 'Home'}">主页</b-dropdown-item>
           <b-dropdown-item :to="{ name: 'Profile'}">个人信息</b-dropdown-item>
@@ -61,6 +62,9 @@
 </template>
 
 <script>
+import {mapGetters} from 'vuex'
+import Config from '~/config'
+
 export default {
   name: 'Navbar',
   data () {
@@ -72,11 +76,11 @@ export default {
     }
   },
   computed: {
-    authorized: function () {
-      return this.$store.getters.token !== ''
-    },
-    name: function () {
-      return this.$store.getters.name
+    ...mapGetters([
+      'name', 'authorized'
+    ]),
+    avatar: function () {
+      return Config.api + this.$store.getters.avatar
     }
   },
   watch: {
diff --git a/resources/assets/js/config/index.js b/resources/assets/js/config/index.js
new file mode 100644
index 0000000..b124b1a
--- /dev/null
+++ b/resources/assets/js/config/index.js
@@ -0,0 +1,4 @@
+export default {
+  appUrl: 'http://qa.dev/',
+  apiUrl: 'http://api.qa.dev/'
+}
diff --git a/resources/assets/js/router/index.js b/resources/assets/js/router/index.js
index 0d46c6b..0fdb271 100644
--- a/resources/assets/js/router/index.js
+++ b/resources/assets/js/router/index.js
@@ -1,5 +1,6 @@
 import Vue from 'vue'
 import Router from 'vue-router'
+import Middleware from './middlewares'
 import Index from '../views/Index'
 import Register from '../views/Register'
 import SignIn from '../views/SignIn'
@@ -14,13 +15,21 @@ const router = new Router({
     {path: '/', name: 'Index', component: Index},
     {path: '/register', name: 'Register', component: Register},
     {path: '/sign-in', alias: '/login', name: 'Sign-in', component: SignIn},
-    {path: '/home', name: 'Home', component: Home},
-    {path: '/profile', name: 'Profile', component: Profile}
+    {
+      path: '/user',
+      component: Home,
+      redirect: {name: 'Home'},
+      meta: {
+        auth: true
+      },
+      children: [
+        {path: 'home', name: 'Home', component: Home},
+        {path: 'profile', name: 'Profile', component: Profile}
+      ]
+    }
   ]
 })
 
-router.beforeEach((to, from, next) => {
-  next()
-})
+router.beforeEach(Middleware)
 
 export default router
diff --git a/resources/assets/js/router/middlewares/RedirectIfAuthenticated.js b/resources/assets/js/router/middlewares/RedirectIfAuthenticated.js
new file mode 100644
index 0000000..0c7fbbb
--- /dev/null
+++ b/resources/assets/js/router/middlewares/RedirectIfAuthenticated.js
@@ -0,0 +1,15 @@
+import Store from '~/store'
+
+function RedirectIfAuthenticated (to, from) {
+  let routerNames = [
+    'Register', 'Sign-in'
+  ]
+
+  if (Store.getters.authoried && routerNames.includes(to.name)) {
+    return {
+      name: 'Index'
+    }
+  }
+}
+
+export default RedirectIfAuthenticated
diff --git a/resources/assets/js/router/middlewares/RedirectIfUnauthenticated.js b/resources/assets/js/router/middlewares/RedirectIfUnauthenticated.js
new file mode 100644
index 0000000..6c34d7a
--- /dev/null
+++ b/resources/assets/js/router/middlewares/RedirectIfUnauthenticated.js
@@ -0,0 +1,17 @@
+import Store from '~/store'
+
+function RedirectIfUnauthenticated (to, from) {
+  // router name
+  let except = [
+    'Sign-in', 'Register', 'Index'
+  ]
+
+  if (!Store.getters.authoried &&
+    !except.includes(from.name)) {
+    return {
+      name: 'Sign-in', query: {redirect: to.fullPath}
+    }
+  }
+}
+
+export default RedirectIfUnauthenticated
diff --git a/resources/assets/js/router/middlewares/UpdateProfile.js b/resources/assets/js/router/middlewares/UpdateProfile.js
new file mode 100644
index 0000000..de5d959
--- /dev/null
+++ b/resources/assets/js/router/middlewares/UpdateProfile.js
@@ -0,0 +1,7 @@
+import Store from '~/store'
+
+export default function (to, from) {
+  if (Store.getters.authoried && Store.getters.role.length === 0) {
+    Store.dispatch('updateProfile')
+  }
+}
diff --git a/resources/assets/js/router/middlewares/index.js b/resources/assets/js/router/middlewares/index.js
new file mode 100644
index 0000000..ec9b27c
--- /dev/null
+++ b/resources/assets/js/router/middlewares/index.js
@@ -0,0 +1,22 @@
+import RedirectIfAuthenticated from './RedirectIfAuthenticated'
+import RedirectIfUnauthenticated from './RedirectIfUnauthenticated'
+import UpdateProfile from './UpdateProfile'
+
+const middleware = [
+  RedirectIfAuthenticated,
+  RedirectIfUnauthenticated,
+  UpdateProfile
+]
+
+export default function (to, from, next) {
+  let result = null
+  for (let i = 0; i < middleware.length; i++) {
+    result = middleware[i](to, from)
+    if (result) break
+  }
+  if (result) {
+    next(result)
+  } else {
+    next()
+  }
+}
diff --git a/resources/assets/js/store/getters.js b/resources/assets/js/store/getters.js
index ef126a0..0f466b3 100644
--- a/resources/assets/js/store/getters.js
+++ b/resources/assets/js/store/getters.js
@@ -1,7 +1,9 @@
 export default {
   authentication: state => state.authorization.getters.authorization,
+  authorized: state => state.authorization.getters.authorized,
   token: state => state.authorization.getters.token,
   profile: state => state.profile.getters.profile,
+  role: state => state.profile.getters.role,
   name: state => state.profile.getters.name,
   messages: state => state.message.getters.messages
 }
diff --git a/resources/assets/js/store/modules/authorizations.js b/resources/assets/js/store/modules/authorizations.js
index 537077f..029d934 100644
--- a/resources/assets/js/store/modules/authorizations.js
+++ b/resources/assets/js/store/modules/authorizations.js
@@ -1,3 +1,4 @@
+import _ from 'lodash'
 import TokenCookies from '~/utils/tokenCookies'
 import Communication from '~/api/communication'
 
@@ -16,6 +17,9 @@ export default {
     },
     expiration: state => {
       return state.expiration
+    },
+    authorized: state => {
+      return !_.isEmpty(state.token)
     }
   },
   mutations: {
@@ -72,7 +76,7 @@ export default {
         dispatch('updateProfile').then(() => {
           resolve()
         }).catch(error => {
-          console.log('error in update')
+          dispatch('addMessage', {type: 'danger', message: '用户信息更新失败，请登录'})
           reject(error)
         })
       })
diff --git a/resources/assets/js/views/Home.vue b/resources/assets/js/views/Home.vue
index c9942b6..8f30a30 100644
--- a/resources/assets/js/views/Home.vue
+++ b/resources/assets/js/views/Home.vue
@@ -1,6 +1,6 @@
 <template>
   <div>
-    Home
+    <router-view/>
   </div>
 </template>
 
-- 
2.17.0

